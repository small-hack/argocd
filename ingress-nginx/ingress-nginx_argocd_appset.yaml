---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: ingress-nginx-helm-appset
  namespace: argocd
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - global_time_zone
  template:
    metadata:
      name: ingress-nginx-helm
    spec:
      project: ingress-nginx
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: ingress-nginx
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: 'https://kubernetes.github.io/ingress-nginx'
        chart: ingress-nginx
        targetRevision: 4.10.1
        helm:
          releaseName: 'ingress-nginx'
          valuesObject:
            controller:
              # note: checkout controller.keda variables in the future
              # decreased to 1 during testing
              replicaCount: 1

              # image:
              #   registry: docker.io
              #   image: jessebot/nginx-controller
              #   tag: "1.0.0-dev"
              #   digest: sha256:b10a059449e2c31ace66562b60a34e1770f28fbd2f940f0d9f0a3d9ab8184cf8

              config:
                # always use 301 instead of a 308 redirect
                http-redirect-code: "301"
                # block all requests with no user-agent to kick out the annoying script kiddies
                block-user-agents: ""
                # show real ip in the logs
                enable-real-ip: "true"
                use-forwarded-headers: "true"
                proxy-real-ip-cidr: "0.0.0.0/0"
                # restrict old versions of tls, could break old browsers/phones
                ssl-protocols: "TLSv1.3"
                # Enables Online Certificate Status Protocol stapling (OCSP) support.
                enable-ocsp: "true"
                # reject SSL handshake to an unknown virtualhost. helps to
                # mitigate the fingerprinting using default certificate of ingress
                ssl-reject-handshake: "true"
                # Enable Modsecurity and the OWASP Core rule set
                enable-modsecurity: "true"
                # Update ModSecurity config and rules
                modsecurity-snippet: |
                  # Enable prevention mode. Can be any of: DetectionOnly,On,Off (default is DetectionOnly)
                  SecRuleEngine Off

                  # Enable scanning of the request body
                  SecRequestBodyAccess On

                  # Enable XML and JSON parsing
                  SecRule REQUEST_HEADERS:Content-Type "(?:text|application(?:/soap\+|/)|application/xml)/" \
                    "id:200000,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML"

                  SecRule REQUEST_HEADERS:Content-Type "application/json" \
                    "id:200001,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=JSON"

                  # Note NGINX Ingress has its own annotations, keep in sync!
                  #
                  # Max request sizes in bytes (with/without files)
                  # 2Gb (default is 12.5Mb)
                  SecRequestBodyLimit 268400000

                  # 20Mb (default is 128Kb)
                  SecRequestBodyNoFilesLimit 20971520

                  # Reject if larger (we could also let it pass with ProcessPartial)
                  SecRequestBodyLimitAction Reject

                  # Update config to include PUT/PATCH/DELETE in the allowed HTTP methods (instead of fully disabling 911100)
                  SecAction "id:900200,phase:1,nolog,pass,t:none,setvar:tx.allowed_methods=GET HEAD POST OPTIONS PUT PATCH DELETE PROPFIND REPORT SEARCH"

                  # Send ModSecurity audit logs to the stdout (only for rejected requests)
                  SecAuditLog /dev/stdout

                  SecAuditLogFormat JSON

                  # could be On/Off/RelevantOnly
                  SecAuditEngine RelevantOnly

                  Include /etc/nginx/owasp-modsecurity-crs/plugins/*conf

                  Include /etc/nginx/owasp-modsecurity-crs/nginx-modsecurity.conf

              # we set the timezone on the pod, to make logs easier to read
              extraEnvs:
                - name: TZ
                  value: '{{ .global_time_zone }}'

              extraVolumes:
                - name: plugins
                  configMap:
                    name: modsecurity-plugins-8gd4c6chf6

              extraVolumeMounts:
                - name: plugins
                  mountPath: /etc/nginx/owasp-modsecurity-crs/plugins

              # -- This configuration defines if Ingress Controller should allow users to set
              # their own *-snippet annotations, otherwise this is forbidden / dropped
              # when users add those annotations.
              # Global snippets in ConfigMap are still respected
              allowSnippetAnnotations: true

              resources:
                requests:
                  cpu: 100m
                  memory: 90Mi

              service:
                enabled: true
                type: LoadBalancer
                externalTrafficPolicy: 'Local'
                external:
                  enabled: true

              metrics:
                enabled: true
                serviceMonitor:
                  enabled: true
                prometheusRule:
                  enabled: false

---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: minio-tenant-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - minio_hostname
  template:
    metadata:
      name: minio-tenant
    spec:
      project: minio
      destination:
        server: "https://kubernetes.default.svc"
        namespace: minio
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        # official minio helm repo
        repoURL: 'https://operator.min.io/'
        chart: tenant
        targetRevision: 5.0.10
        helm:
          releaseName: minio-tenant
          values: |
            ## Secret with default environment variable configurations to be used by MinIO Tenant.
            ## Not recommended for production deployments! Create the secret manually instead.
            secrets:
              name: myminio-env-configuration
              # MinIO root user and password
              accessKey: minio
              secretKey: minio123
              ## Set the value for existingSecret to use a pre created secret and dont create default one
              # existingSecret: random-env-configuration
            ## MinIO Tenant Definition
            tenant:
              # Tenant name
              name: myminio
              image:
                repository: quay.io/minio/minio
                tag: RELEASE.2023-09-04T19-57-37Z
              ## Secret name that contains additional environment variable configurations.
              ## The secret is expected to have a key named config.env containing environment variables exports.
              configuration:
                name: myminio-env-configuration
              ## Specification for MinIO Pool(s) in this Tenant.
              pools:
                ## Servers specifies the number of MinIO Tenant Pods / Servers in this pool.
                ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
                ## Note that the operator does not support upgrading from standalone to distributed mode.
                - servers: 1
                  ## custom name for the pool
                  name: pool-0
                  ## volumesPerServer specifies the number of volumes attached per MinIO Tenant Pod / Server.
                  volumesPerServer: 1
                  ## size specifies the capacity per volume
                  size: 10Gi
                  ## storageClass specifies the storage class name to be used for this pool
                  ### If using Amazon Elastic Block Store (EBS) CSI driver
                  ### Please make sure to set xfs for "csi.storage.k8s.io/fstype" parameter
                  ### under StorageClass.parameters.
                  ### Docs: https://github.com/kubernetes-sigs/aws-ebs-csi-driver/blob/master/docs/parameters.md
                  storageClassName: local-path
                  ## Used to specify annotations for pods
                  annotations: { }
                  ## Used to specify labels for pods
                  labels: { }
                  ## Used to specify a toleration for a pod
                  tolerations: [ ]
                  ## nodeSelector parameters for MinIO Pods. It specifies a map of key-value pairs. For the pod to be
                  ## eligible to run on a node, the node must have each of the
                  ## indicated key-value pairs as labels.
                  ## Read more here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                  nodeSelector: { }
                  ## Affinity settings for MinIO pods. Read more about affinity
                  ## here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity.
                  affinity: { }
                  ## Configure resource requests and limits for MinIO containers
                  resources: { }
                  ## Configure Pod's security context
                  ## We recommend to skip the recursive permission change by using
                  ## fsGroupChangePolicy as OnRootMismatch because it can be pretty
                  ## expensive for larger volumes with lots of small files.
                  securityContext:
                    runAsUser: 1000
                    runAsGroup: 1000
                    fsGroup: 1000
                    fsGroupChangePolicy: "OnRootMismatch"
                    runAsNonRoot: true
                  ## Configure container security context
                  containerSecurityContext:
                    runAsUser: 1000
                    runAsGroup: 1000
                    runAsNonRoot: true
                  ## Configure topology constraints
                  topologySpreadConstraints: [ ]
                  ## Configure Runtime Class
                  # runtimeClassName: ""
              ## Mount path where PV will be mounted inside container(s).
              # pool metrics to be read by Prometheus
              metrics:
                enabled: false
                port: 9000
                protocol: http
              certificate:
                ## Use this field to provide one or more external CA certificates. This is used by MinIO
                ## to verify TLS connections with other applications:
                ## https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret
                externalCaCertSecret: [ ]
                ## Use this field to provide a list of Secrets with external certificates. This can be used to configure
                ## TLS for MinIO Tenant pods. Create secrets as explained here:
                ## https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret
                externalCertSecret: [ ]
                ## Enable automatic Kubernetes based certificate generation and signing as explained in
                ## https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster
                requestAutoCert: true
                ## This field is used only when "requestAutoCert" is set to true. Use this field to set CommonName
                ## for the auto-generated certificate. Internal DNS name for the pod will be used if CommonName is
                ## not provided. DNS name format is *.minio.default.svc.cluster.local
                certConfig: { }
              ## MinIO features to enable or disable in the MinIO Tenant
              ## https://github.com/minio/operator/blob/master/docs/tenant_crd.adoc#features
              features:
                bucketDNS: false
                domains: { }
                enableSFTP: false
              ## List of bucket definitions to create during tenant provisioning.
              ## Example:
              #   - name: my-minio-bucket
              #     objectLock: false        # optional
              #     region: us-east-1        # optional
              buckets:
                - name: nextcloud
                  objectLock: false
                  region: us-east-1
                - name: mastodon
                  objectLock: false
                  region: us-east-1
              ## List of secret names to use for generating MinIO users during tenant provisioning
              users: [ ]
              ## PodManagement policy for MinIO Tenant Pods. Can be "OrderedReady" or "Parallel"
              ## Refer https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
              ## for details.
              podManagementPolicy: Parallel
              ## exposeServices defines the exposure of the MinIO object storage and Console services.
              ## service is exposed as a loadbalancer in k8s service.
              exposeServices: { }
              # kubernetes service account associated with a specific tenant
              # https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
              serviceAccountName: ""
              # Tenant scrape configuration will be added to prometheus managed by the prometheus-operator.
              prometheusOperator: false
              # Enable JSON, Anonymous logging for MinIO tenants.
              # Refer https://github.com/minio/operator/blob/master/pkg/apis/minio.min.io/v2/types.go#L303
              # How logs will look:
              # $ k logs myminio-pool-0-0 -n default
              # {"level":"INFO","errKind":"","time":"2022-04-07T21:49:33.740058549Z","message":"All MinIO sub-systems initialized successfully"}
              # Notice they are in JSON format to be consumed
              logging:
                anonymous: true
                json: true
                quiet: true
              ## serviceMetadata allows passing additional labels and annotations to MinIO and Console specific
              ## services created by the operator.
              serviceMetadata: { }
              ## Add environment variables to be set in MinIO container (https://github.com/minio/minio/tree/master/docs/config)
              env: [ ]

            ingress:
              api:
                enabled: false
                ingressClassName: "nginx"
                annotations: { }
                tls: [ ]
                host: minio.local
              console:
                enabled: false
                ingressClassName: "nginx"
                annotations: { }
                tls: [ ]
                host: minio-console.local

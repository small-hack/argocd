global:
  evaluation_interval: 5s
  scrape_interval: 5s
  scrape_timeout: 10s

crds:
  enabled: true

prometheus:
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/auth-signin: "https://***REMOVED***/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err"
      nginx.ingress.kubernetes.io/auth-url: https://***REMOVED***/validate
      nginx.ingress.kubernetes.io/auth-response-headers: X-Vouch-User
      nginx.ingress.kubernetes.io/auth-snippet: |
        auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
        auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
        auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;    
    hosts:
      - prometheus.vleermuis.tech
    paths: 
      - /
    tls:
      - secretName: prometheus-tls
        hosts:
        - prometheus.vleermuis.tech
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    additionalScrapeConfigsSecret:
      enabled: true
      name: additional-scrape-configs
      key: scrape-targets.yaml
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 32Gi
    retention: 30d
    logLevel: info
  prometheusOperator:
    namespaces:
      releaseNamespace: true
      additional:
        - kube-system
        - nextcloud
        - k8up
        - keycloak
    admissionWebhooks:
      certManager:
        enabled: true
      patch:
        enabled: false

alertmanager:
  enabled: true
  annotations: {}
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/auth-signin: "https://***REMOVED***/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err"
      nginx.ingress.kubernetes.io/auth-url: https://***REMOVED***/validate
      nginx.ingress.kubernetes.io/auth-response-headers: X-Vouch-User
      nginx.ingress.kubernetes.io/auth-snippet: |
        auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
        auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
        auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
    hosts:
      - alertmanager.vleermuis.tech
    paths: 
      - /
    tls:
      - secretName: alertmanager-tls
        hosts:
        - alertmanager.vleermuis.tech

grafana:
  grafana.ini:
    auth:
      disable_login_form: false
      signout_redirect_url: "https://grafana.vleermui.tech/login/signout"
    auth.proxy:
      enabled: true
      header_name: X-Vouch-User
      header_property: username
      auto_sign_up: true
    users:
      allow_sign_up: false
      auto_assign_org: true
      auto_assign_org_role: Admin
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/auth-signin: "https://***REMOVED***/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err"
      nginx.ingress.kubernetes.io/auth-url: https://***REMOVED***/validate
      nginx.ingress.kubernetes.io/auth-response-headers: X-Vouch-User
      nginx.ingress.kubernetes.io/auth-snippet: |
        auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
        auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
        auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
        auth_request_set $user   $upstream_http_x_auth_request_user;
        auth_request_set $email  $upstream_http_x_auth_request_email;
        proxy_set_header X-User  $user;
        proxy_set_header X-Email $email;
    hosts:
      - grafana.vleermuis.tech
    tls:
      - secretName: grafana-tls
        hosts:
        - grafana.vleermuis.tech

scrape_configs:
- job_name: ingress
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 1m
  metrics_path: /metrics
  scheme: http

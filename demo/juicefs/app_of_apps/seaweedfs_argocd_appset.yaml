---
# webapp is deployed 2nd because we need secrets and persistent volumes up 1st
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: seaweedfs-web-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - seaweedfs_s3_endpoint
  template:
    metadata:
      name: seaweedfs-web-app
      annotations:
        argocd.argoproj.io/sync-wave: "3"
    spec:
      project: juicefs
      destination:
        server: https://kubernetes.default.svc
        namespace: juicefs
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        # only for testing our own patches before PRs
        # repoURL: https://github.com/jessebot/seaweedfs
        # targetRevision: main
        # path: k8s/charts/seaweedfs/

        repoURL: 'https://seaweedfs.github.io/seaweedfs/helm'
        targetRevision: 3.62.0
        chart: seaweedfs
        helm:
          releaseName: seaweedfs
          values: |
            master:
              data:
                type: "existingClaim"
                claimName: "swfs-master-data"
            volume:
              data:
                type: "existingClaim"
                claimName: "swfs-volume-data"
            filer:
              enablePVC: true
              storage: 5Gi
              data:
                type: "existingClaim"
                claimName: "swfs-filer-data"
              s3:
                enabled: true
                port: 8333
                httpsPort: 0
                allowEmptyFolder: false
                domainName: ""
                enableAuth: true
                existingConfigSecret: juicefs-s3-credentials
                skipAuthSecretCreation: true
                auditLogConfig: {}
            global:
              createClusterRole: true
              loggingLevel: 1
              monitoring:
                enabled: false
                gatewayHost: null
                gatewayPort: null
              enableReplication: false
              #  replication type is XYZ:
              # X number of replica in other data centers
              # Y number of replica in other racks in the same data center
              # Z number of replica in other servers in the same rack
              replicationPlacment: "001"

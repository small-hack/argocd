---
# webapp is deployed 2nd because we need secrets and persistent volumes up 1st
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: appflowy-gotrue-appset
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "4"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - global_cluster_issuer
  template:
    metadata:
      name: gotrue-app
      annotations:
        argocd.argoproj.io/sync-wave: "4"
    spec:
      project: appflowy
      destination:
        server: https://kubernetes.default.svc
        namespace: appflowy
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: 'https://jessebot.github.io/gotrue-helm'
        chart: gotrue
        targetRevision: 0.4.0
        #
        # for testing the live repo
        # repoURL: https://github.com/jessebot/gotrue-helm
        # targetRevision: main
        # path: charts/gotrue/
        helm:
          values: |
            gotrue:
              siteUrl: "http://localhost:3000"
              externalUrl: "http://0.0.0.0:9999"
              apiHost: "localhost"

              jwt:
                secret: ""

              logLevel: debug

              # https://github.com/supabase/gotrue/blob/425487325b3e1d7be4661e9f292232205a9a3ce0/example.env#L207
              security:
                refreshToken:
                  rotationEnabled: false
                  reuseInterval: "0"
                updatePasswordRequireReauth: false

              webhook:
                url: "http://register-lambda:3000/"
                secret: "test_secret"
                retries: "5"
                timeoutSec: "3"
                events: "validate,signup,login"

              cookie:
                key: "sb"
                domain: "locahost"
                maxVerifiedFactors: "10"

              # -- uri allow list e.g. ["http://localhost:3000"]
              uriAllowList: "*"

              database:
                driver: postgres
                user: supabaseauthadmin
                host: gotrue-postgres-rw.appflowy.svc
                port: "5432"
                database: gotrue
                sslMode: "verify-full"
                sslCert: "/etc/secrets/gotrue/tls.crt"
                sslRootCert: "/etc/secrets/ca/ca.crt"
                sslKey: "/etc/secrets/gotrue/tls.key"
                namespace: "auth"

              smtp:
                host: ""
                port: "587"
                user: ""
                password: ""
                senderName: ""
                adminEmail: ""
                maxFrequency: "5s"
                existingSecret: ""

              mailer:
                autoConfirm: false
                secureEmailChangeEnabled: true
                urlPaths:
                  confirmation: "/verify"
                  invite: "/verify"
                  recovery: "/verify"
                  emailChange: "/verify"
                subjects:
                  confirmation: "Confirm your Email"
                  recovery: "Reset Your Password"
                  magicLink: "Your Magic Link"
                  emailChange: "Confirm Email Change"
                  invite: "You have been invited"

              signup:
                disable: false

              external:
                email:
                  enabled: true
                phone:
                  enabled: true
                ios:
                  bundleID: "com.supabase.gotrue"

                # -- PKCE Config https://github.com/supabase/gotrue/blob/425487325b3e1d7be4661e9f292232205a9a3ce0/example.env#L171
                flowStateExpiryDuration: "300s"

                github:
                  # -- enable github as your external auth provider
                  enabled: false
                  clientID: ""
                  secret: ""
                  redirectUri: ""

                saml:
                  # -- enable a saml provider for your external auth provider
                  enabled: false
                  metadataUrl: ""
                  apiBase: "http://localhost:9999"
                  name: "auth0"
                  signingCert: ""
                  signingKey: ""

            service:
              type: ClusterIP
              port: 80
              targetPort: 9999

            volumes:
              - name: postgres-ca
                secret:
                  secretName: gotrue-postgres-server-ca-key-pair
                  defaultMode: 0640

              - name: postgres-client-certs
                secret:
                  secretName: gotrue-postgres-supabaseauthadmin-cert
                  defaultMode: 0640

            volumeMounts:
              - name: postgres-ca
                mountPath: /etc/secrets/ca

              - name: postgres-client-certs
                mountPath: /etc/secrets/gotrue

            # ref: https://github.com/supabase/gotrue/blob/312f871614438245aa11ca8cde34b2500611de52/Dockerfile#L19
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000

            podSecurityContext:
              fsGroup: 1000

            livenessProbe:
              enabled: true
              initialDelaySeconds: 10
              periodSeconds: 10
              timeoutSeconds: 300
              failureThreshold: 15
              successThreshold: 1

            readinessProbe:
              enabled: true
              initialDelaySeconds: 10
              periodSeconds: 10
              timeoutSeconds: 300
              failureThreshold: 15
              successThreshold: 1

            ingress:
              enabled: false
              className: "nginx"
              annotations: {}
              hosts:
                - host: chart-example.local
                  paths:
                    - path: /
                      pathType: ImplementationSpecific
              tls:
                - secretName: chart-example-tls
                  hosts:
                    - chart-example.local

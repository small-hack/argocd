---
# third sync wave because it has to be up after postgres
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: pixelfed-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "4"
spec:
  # enable go templating
  goTemplate: true
  # this generator allows us to values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - pixelfed_hostname
              - pixelfed_s3_endpoint
              - global_cluster_issuer
              - global_time_zone
  template:
    metadata:
      name: pixelfed-web-app
      annotations:
        argocd.argoproj.io/sync-wave: "4"
        argocd.argoproj.io/sync-options: ApplyOnly=true
    spec:
      project: pixelfed

      # where the app is going
      destination:
        server: https://kubernetes.default.svc
        namespace: pixelfed

      # reconciliation policy
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true

      # where the is coming from
      source:
        repoURL: https://small-hack.github.io/pixelfed-chart
        targetRevision: 0.2.1
        chart: pixelfed
        helm:
          releaseName: pixelfed
          valuesObject:
            fullnameOverride: pixelfed

            ingress:
              enabled: true
              className: nginx
              annotations:
                cert-manager.io/cluster-issuer: '{{ .global_cluster_issuer }}'
                nginx.ingress.kubernetes.io/proxy-body-size: 1g
              hosts:
                - host: '{{ .pixelfed_hostname }}'
                  paths:
                    - path: '/'
                      pathType: ImplementationSpecific
              tls:
                - secretName: pixelfed-tls
                  hosts:
                    - '{{ .pixelfed_hostname }}'

            # resource limits for pixelfed
            resources:
              limits:
                cpu: 1500m
                memory: 1Gi
              requests:
                cpu: 500m
                memory: 512Mi

            # for postgres ssl certs
            extraEnv:
              - name: "PGSSLCERT"
                value: /etc/secrets/pixelfed/tls.crt

              - name: "PGSSLKEY"
                value: /etc/secrets/pixelfed/tls.key

              - name: "PGSSLROOTCERT"
                value: /etc/secrets/ca/ca.crt

            # for postgres ssl certs
            extraVolumes:
              - name: postgres-ca
                secret:
                  secretName: pixelfed-postgres-server-ca-key-pair
                  defaultMode: 0640

              - name: postgres-client-certs
                secret:
                  secretName: pixelfed-postgres-pixelfed-cert
                  defaultMode: 0640

            # for postgres ssl certs
            extraVolumeMounts:
              - name: postgres-ca
                mountPath: /etc/secrets/ca

              - name: postgres-client-certs
                mountPath: /etc/secrets/pixelfed

            persistence:
              enabled: true
              existingClaim: "pixelfed"

            externalDatabase:
              enabled: true
              host: pixelfed-postgres-rw.pixelfed.svc
              port: "5432"
              database: pixelfed
              username: pixelfed
              existingSecret: "pixelfed-pgsql-credentials"
              existingSecretPasswordKey: postgresPassword
              tls_mode: "disable"
              sslcert: "/etc/secrets/pixelfed/tls.crt"
              sslkey: "/etc/secrets/pixelfed/tls.key"
              ca_cert: "/etc/secrets/ca/ca.crt"

            # https://github.com/bitnami/charts/tree/main/bitnami/postgresql#parameters
            postgresql:
              enabled: false

            pixelfed:
              storage:
                backend: "s3"
                localBasePath: "/pixelfed/storage"

                s3:
                 enabled: true
                 endpoint: "{{ .pixelfed_s3_endpoint }}"
                 proxy: false
                 useSSL: true
                 # accessKey: ""
                 # secretKey: ""
                 # If this is set, accessKey, secretKey will not take place
                 # Needs the S3_ACCESS_KEY_ID and S3_SECRET_ACCESS_KEY keys.
                 existingSecret: "pixelfed-s3-credentials"
                 bucket: "pixelfed"

              smtp:
                existingSecretName: "pixelfed-smtp-credentials"
                existingSecretKeys:
                  username: "username"
                  password: "password"
                  port: "port"
                  host: "host"
                from: "no-reply@{{ .pixelfed_hostname }}"
                discloseRecipients: false

            # -- https://github.com/pixelfed/pixelfed/blob/main/Dockerfile#L75
            # if you manually change the UID/GID environment variables, ensure these values match:
            podSecurityContext:
              runAsUser: 991
              runAsGroup: 991
              fsGroup: 991

            securityContext: {}

            serviceAccount:
              # -- Specifies whether a service account should be created
              create: true
              # -- Annotations to add to the service account
              annotations: {}

            # -- timezone for all the pods
            timezone: '{{ .global_time_zone }}'

---
# webapp is deployed 2nd because we need secrets and persistent volumes up 1st
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cozy-web-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - cozy_hostname
              - global_cluster_issuer
  template:
    metadata:
      name: cozy-web-app
      annotations:
        argocd.argoproj.io/sync-wave: "3"
    spec:
      project: cozy
      destination:
        server: https://kubernetes.default.svc
        namespace: cozy
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: 'https://jessebot.github.io/cozy-helm-chart'
        chart: cozy-stack
        targetRevision: 0.1.0
        helm:
          # these values for cozy and couchdb just render the env vars here:
          # https://github.com/cozy/cozy-stack/tree/0fe78134b2d09c73813be48274c66ed8582328e6/scripts/docker/production
          #
          # and later these:
          # https://docs.cozy.io/en/cozy-stack/config/#stack-endpoints
          values: |
            cozy:
              adminPassphrase: "ChangeMeToday!"
              # existingSecret: ""
              fs_url: "/var/lib/cozy"

            couchdb:
              host: ""
              port: "5984"
              protocol: "http"
              user: ""
              password: ""
              existingSecret: "couchdb-credentials"

              # secretKeys:
              #   host: "host"
              #   port: "port"
              #   protocol: "protocol"
              #   user: "user"
              #   password: "password"

            ingress:
              enabled: true 
              className: "nginx"
              annotations:
                cert-manager.io/cluster-issuer: {{ .global_cluster_issuer }}
                nginx.ingress.kubernetes.io/proxy-body-size: 10G
              hosts:
                - host: {{ .cozy_hostname }}
                  paths:
                    - path: /
                      pathType: ImplementationSpecific
              tls:
                - secretName: cozy-tls
                  hosts:
                    - "{{ .cozy_hostname }}"

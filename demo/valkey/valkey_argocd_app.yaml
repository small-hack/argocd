---
# webapp is deployed 2nd because we need secrets and persistent volumes up 1st
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: valkey
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: valkey
  destination:
    server: https://kubernetes.default.svc
    namespace: valkey
  syncPolicy:
    syncOptions:
      - ApplyOutOfSyncOnly=true
    automated:
      selfHeal: true
  source:
    repoURL: registry-1.docker.io
    chart: bitnamicharts/valkey
    targetRevision: 2.0.0
    helm:
      values: |
        master:
          ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
          ##
          persistence:
            ## @param master.persistence.enabled Enable persistence on Valkey master nodes using Persistent Volume Claims
            ##
            enabled: true
            ## @param master.persistence.medium Provide a medium for `emptyDir` volumes.
            ##
            medium: ""
            ## @param master.persistence.sizeLimit Set this to enable a size limit for `emptyDir` volumes.
            ##
            sizeLimit: ""
            ## @param master.persistence.path The path the volume will be mounted at on Valkey master containers
            ## NOTE: Useful when using different Valkey images
            ##
            path: /data
            ## @param master.persistence.subPath The subdirectory of the volume to mount on Valkey master containers
            ## NOTE: Useful in dev environments
            ##
            subPath: ""
            ## @param master.persistence.subPathExpr Used to construct the subPath subdirectory of the volume to mount on Valkey master containers
            ##
            subPathExpr: ""
            ## @param master.persistence.storageClass Persistent Volume storage class
            ## If defined, storageClassName: <storageClass>
            ## If set to "-", storageClassName: "", which disables dynamic provisioning
            ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
            ##
            storageClass: ""
            ## @param master.persistence.accessModes Persistent Volume access modes
            ##
            accessModes:
              - ReadWriteOnce
            ## @param master.persistence.size Persistent Volume size
            ##
            size: 8Gi
            ## @param master.persistence.annotations Additional custom annotations for the PVC
            ##
            annotations: {}
            ## @param master.persistence.labels Additional custom labels for the PVC
            ##
            labels: {}
            ## @param master.persistence.selector Additional labels to match for the PVC
            ## e.g:
            ## selector:
            ##   matchLabels:
            ##     app: my-app
            ##
            selector: {}
            ## @param master.persistence.dataSource Custom PVC data source
            ##
            dataSource: {}
            ## @param master.persistence.existingClaim Use a existing PVC which must be created manually before bound
            ## NOTE: requires master.persistence.enabled: true
            ##
            existingClaim: ""
          ## persistentVolumeClaimRetentionPolicy
          ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#persistentvolumeclaim-retention
          ## @param master.persistentVolumeClaimRetentionPolicy.enabled Controls if and how PVCs are deleted during the lifecycle of a StatefulSet
          ## @param master.persistentVolumeClaimRetentionPolicy.whenScaled Volume retention behavior when the replica count of the StatefulSet is reduced
          ## @param master.persistentVolumeClaimRetentionPolicy.whenDeleted Volume retention behavior that applies when the StatefulSet is deleted
          ##
          persistentVolumeClaimRetentionPolicy:
            enabled: false
            whenScaled: Retain
            whenDeleted: Retain

        replica:
          ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
          ##
          persistence:
            ## @param master.persistence.enabled Enable persistence on Valkey master nodes using Persistent Volume Claims
            ##
            enabled: true
            ## @param master.persistence.medium Provide a medium for `emptyDir` volumes.
            ##
            medium: ""
            ## @param master.persistence.sizeLimit Set this to enable a size limit for `emptyDir` volumes.
            ##
            sizeLimit: ""
            ## @param master.persistence.path The path the volume will be mounted at on Valkey master containers
            ## NOTE: Useful when using different Valkey images
            ##
            path: /data
            ## @param master.persistence.subPath The subdirectory of the volume to mount on Valkey master containers
            ## NOTE: Useful in dev environments
            ##
            subPath: ""
            ## @param master.persistence.subPathExpr Used to construct the subPath subdirectory of the volume to mount on Valkey master containers
            ##
            subPathExpr: ""
            ## @param master.persistence.storageClass Persistent Volume storage class
            ## If defined, storageClassName: <storageClass>
            ## If set to "-", storageClassName: "", which disables dynamic provisioning
            ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
            ##
            storageClass: ""
            ## @param master.persistence.accessModes Persistent Volume access modes
            ##
            accessModes:
              - ReadWriteOnce
            ## @param master.persistence.size Persistent Volume size
            ##
            size: 8Gi
            ## @param master.persistence.annotations Additional custom annotations for the PVC
            ##
            annotations: {}
            ## @param master.persistence.labels Additional custom labels for the PVC
            ##
            labels: {}
            ## @param master.persistence.selector Additional labels to match for the PVC
            ## e.g:
            ## selector:
            ##   matchLabels:
            ##     app: my-app
            ##
            selector: {}
            ## @param master.persistence.dataSource Custom PVC data source
            ##
            dataSource: {}
            ## @param master.persistence.existingClaim Use a existing PVC which must be created manually before bound
            ## NOTE: requires master.persistence.enabled: true
            ##
            existingClaim: ""
          ## persistentVolumeClaimRetentionPolicy
          ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#persistentvolumeclaim-retention
          ## @param master.persistentVolumeClaimRetentionPolicy.enabled Controls if and how PVCs are deleted during the lifecycle of a StatefulSet
          ## @param master.persistentVolumeClaimRetentionPolicy.whenScaled Volume retention behavior when the replica count of the StatefulSet is reduced
          ## @param master.persistentVolumeClaimRetentionPolicy.whenDeleted Volume retention behavior that applies when the StatefulSet is deleted
          ##
          persistentVolumeClaimRetentionPolicy:
            enabled: false
            whenScaled: Retain
            whenDeleted: Retain

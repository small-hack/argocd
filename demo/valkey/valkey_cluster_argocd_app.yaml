---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: valkey-cluster-appset
  namespace: argocd
spec:
  goTemplate: true
  template:
    metadata:
      name: valkey-cluster-app
      annotations:
        argocd.argoproj.io/sync-wave: "1"
    spec:
      project: redis
      destination:
        server: https://kubernetes.default.svc
        namespace: valkey
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: 'registry-1.docker.io'
        chart: bitnamicharts/valkey-cluster
        targetRevision: 0.1.4
        helm:
        values: |
          global:
            storageClass: "local-path"

          fullnameOverride: "valkey"

          usePassword: false
          password: ""
          existingSecret: "valkey-credentials"
          existingSecretPasswordKey: "valkey_password"

          tls:
            enabled: false
            authClients: true
            autoGenerated: false

          service:
            ports:
              valkey: 6379
            type: ClusterIP
            loadBalancerIP: ""
            loadBalancerSourceRanges: []
            externalTrafficPolicy: Cluster

          persistence:
            enabled: true
            path: /bitnami/valkey/data
            storageClass: ""
            annotations: {}
            accessModes:
              - ReadWriteOnce
            size: 8Gi

          persistentVolumeClaimRetentionPolicy:
            enabled: false
            whenScaled: Retain
            whenDeleted: Retain

          valkey:
            command: []
            args: []
            updateStrategy:
              type: RollingUpdate
              rollingUpdate:
                partition: 0
            podManagementPolicy: Parallel
            automountServiceAccountToken: false
            hostNetwork: false
            useAOFPersistence: "yes"
            containerPorts:
              valkey: 6379
              bus: 16379
            resourcesPreset: "nano"
            resources: {}

          cluster:
            init: true
            nodes: 6
            replicas: 1
            externalAccess:
              enabled: false
              hostMode: false
              service:
                disableLoadBalancerIP: false
                type: LoadBalancer
                port: 6379
                loadBalancerIP: []
                loadBalancerSourceRanges: []

          metrics:
            enabled: false
            resourcesPreset: "nano"
            serviceMonitor:
              enabled: false

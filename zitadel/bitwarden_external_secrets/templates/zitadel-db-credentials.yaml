{{- if and .Values.useExternalSecrets .Values.bitwardenDBItemID }}
# secret for a zitadel DB
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: zitadel-db-credentials
  namespace: zitadel
spec:
  target:
    # Name of the kubernetes secret
    name: zitadel-db-credentials
    deletionPolicy: Delete
    template:
      type: Opaque
      data:
        # Key-names within the kubernetes secret
        username: |-
          {{ `{{ .username }}` }}
        CONSOLE_ACCESS_KEY: |-
          {{ `{{ .accessKey }}` }}
        CONSOLE_SECRET_KEY: |-
          {{ `{{ .secretKey }}` }}
        S3_ENDPOINT: |-
          {{ `{{ .s3endpoint }}` }}
  data:
    # secretKey is just a variable for use above
    - secretKey: username
      sourceRef:
        storeRef:
          name: bitwarden-login
          kind: ClusterSecretStore
      remoteRef:
        # id of the bitwarden item with the db username
        key: {{ .Values.bitwardenDBItemID }}
        # property within the bitwarden secret we want
        property: username

    - secretKey: accessKey
      sourceRef:
        storeRef:
          name: bitwarden-login
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.s3CredentialsBitwardenID }} 
        property: username

    - secretKey: secretKey
      sourceRef:
        storeRef:
          name: bitwarden-login
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.s3CredentialsBitwardenID }}
        property: password

    - secretKey: s3endpoint
      sourceRef:
        storeRef:
          name: bitwarden-login
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.s3CredentialsBitwardenID }}
        property: s3Endpoint
{{- end }}

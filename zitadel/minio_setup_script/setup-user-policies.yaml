apiVersion: v1
kind: ConfigMap
metadata:
  name: start-config-script
data:
  # create a new policy
  # attach new policy to minio zitadel postgres user
  # detach consoleAdmin policy (default assigned)
  setup.sh: |
    #!/bin/bash
    env && \
    mc alias set local https://$S3_ENDPOINT $ACCESS_KEY $SECRET_KEY && \
    mc admin info local && \
    mc admin policy create local onlyPostgres /start-config/db-user-policy.json && \
    mc admin policy attach local onlyPostgres --user zitadel-postgresql && \
    mc admin policy detach local consoleAdmin --user zitadel-postgresql

  db-user-policy.json: |
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:*"
          ],
          "Resource": [
            "arn:aws:s3:::zitadel-postgresql",
            "arn:aws:s3:::zitadel-postgresql/*"
          ]
        }
      ]
    }

---
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-setup-user-and-policies
spec:
  backoffLimit: 5
  template:
    spec:
      restartPolicy: OnFailure

      volumes:
        - name: start-config
          configMap:
            name: start-config-script
            defaultMode: 0744

      containers:
        - name: mc
          image: minio/mc
          command: [ "/start-config/setup.sh" ]

          volumeMounts:
            - name: start-config
              mountPath: /start-config/

          env:
            - name: ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: zitadel-db-credentials
                  key: CONSOLE_ACCESS_KEY

            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: zitadel-db-credentials
                  key: CONSOLE_SECRET_KEY

            - name: ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: zitadel-db-credentials
                  key: S3_ENDPOINT

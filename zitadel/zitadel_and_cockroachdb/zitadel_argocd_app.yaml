---
# First sync wave because we need secrets for zitadel before it spins up
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: zitadel-external-secrets
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    pref.argocd.argoproj.io/default-view: "tree"
spec:
  project: zitadel
  destination:
    server: "https://kubernetes.default.svc"
    namespace: zitadel
  source:
    repoURL: https://github.com/small-hack/argocd-apps.git
    path: zitadel/external_secrets/
    targetRevision: main
  syncPolicy:
    syncOptions:
      - Replace=true
    automated:
      prune: true
      selfHeal: true

---
# CockroachDB
# https://github.com/cockroachdb/helm-charts/tree/master/cockroachdb#configuration
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: zitadel-cockroachdb
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    pref.argocd.argoproj.io/default-view: "tree"
spec:
  project: zitadel
  destination:
    server: "https://kubernetes.default.svc"
    namespace: zitadel
  source:
    repoURL: https://charts.cockroachdb.com/
    chart: cockroachdb
    targetRevision: 11.1.6
    helm:
      values: |
        configmapConfig:
          ExternalPort: 443
        conf:
          singe-node: true
        statefulset:
          replicas: 1
        init:
          jobAnnotations:
            argocd.argoproj.io/hook: Sync
          annotations:
            argocd.argoproj.io/hook: Sync
        provisioning:
          enabled: true
          users:
            - name: zitadel
              # this sets password to NULL which forces cert auth which should prevent password authentication
              # ref: https://www.cockroachlabs.com/docs/stable/create-user#prevent-a-user-from-using-password-authentication
              password:
              options: [LOGIN]
          databases:
            - name: zitadel
              owners:
                - zitadel
        tls:
          enabled: false
          tlsSecret: true
          selfSigner:
            enabled: false
          certManagerIssuer:
            group: cert-manager.io
            kind: ClusterIssuer
            name: letsencrypt-staging
            # Make it false when you are providing your own CA issuer
            isSelfSignedIssuer: false
            # Duration of Client certificates in hours
            clientCertDuration: 672h
            # Expiry window of client certificates means a window before actual expiry in which client certs should be rotated.
            clientCertExpiryWindow: 48h
            # Duration of node certificates in hours
            nodeCertDuration: 8760h
            # Expiry window of node certificates means a window before actual expiry in which node certs should be rotated.
            nodeCertExpiryWindow: 168h

        # networkPolicy:
        #   enabled: true
        #   ingress:
        #     grpc:
        #       - podSelector:
        #           matchLabels:
        #             app.kubernetes.io/name: zitadel-web-app
        #             app.kubernetes.io/instance: zitadel
        #     http:
        #       - namespaceSelector:
        #           matchLabels:
        #             project: zitadel
  syncPolicy:
    syncOptions:
      - ApplyOutOfSyncOnly=true
    automated:
      prune: true
      selfHeal: true

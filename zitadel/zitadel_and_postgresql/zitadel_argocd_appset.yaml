---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: zitadel-web-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    pref.argocd.argoproj.io/default-view: "network"
    pref.argocd.argoproj.io/default-pod-sort: "topLevelResource"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars: ["zitadel_hostname"]
  template:
    metadata:
      name: zitadel-web-app
    spec:
      project: zitadel
      destination:
        server: https://kubernetes.default.svc
        namespace: zitadel
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: https://zitadel.github.io/zitadel-charts
        chart: zitadel
        targetRevision: 5.0.0
        helm:
          releaseName: zitadel
          values: |
            zitadel:
              # See all defaults here:
              # https://github.com/zitadel/zitadel/blob/main/cmd/defaults.yaml
              configmapConfig:
                Machine:
                  Identification:
                    Hostname:
                      Enabled: true
                    Webhook:
                      Enabled: false

                # setup ZITADEL with a service account
                FirstInstance:
                  Org:
                    Machine:
                      Machine:
                        # Creates a service account with the name zitadel-admin-sa,
                        # which results in a secret 'zitadel-admin-sa' with a key 'zitadel-admin-sa.json'
                        Username: zitadel-admin-sa
                        Name: Admin
                      MachineKey:
                        Type: 1
              # these must be set as is until https://github.com/zitadel/zitadel-charts/issues/113 is resolved
              dbSslRootCrtSecret:
              dbSslClientCrtSecret:
              # Reference the name of the secret that contains the masterkey.
              # The key should be named "masterkey".
              masterkeySecretName: "zitadel-core-key"

            replicaCount: 1

            securityContext: {}

            # Additional environment variables
            # see more here: https://github.com/zitadel/zitadel/blob/main/cmd/defaults.yaml
            env:
              - name: ZITADEL_EXTERNAL_DOMAIN
                value: {{ .zitadel_hostname }}
              - name: ZITADEL_DATABASE_POSTGRES_HOST
                value: zitadel-postgres
              - name: ZITADEL_DATABASE_POSTGRES_PORT
                value: "5432"
              - name: ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE
                value: "disable"
              - name: ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE
                value: "disable"
              - name: ZITADEL_DATABASE_POSTGRES_USER_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: zitadel-db-credentials
                    key: username
              - name: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: zitadel-db-credentials
                    key: password
              - name: ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: zitadel-db-credentials
                    key: adminUser
              - name: ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: zitadel-db-credentials
                    key: adminPassword

            ingress:
              enabled: true
              className: "nginx"
              annotations:
                kubernetes.io/tls-acme: "true"
                cert-manager.io/cluster-issuer: letsencrypt-staging
              hosts:
                - host: {{ .zitadel_hostname }}
                  paths:
                    - path: /
                      pathType: Prefix
              tls:
                - secretName: zitadel-tls
                  hosts:
                    - {{ .zitadel_hostname }}

            metrics:
              enabled: false
              serviceMonitor:
                enabled: false

---
# First sync wave because we need secrets for zitadel before it spins up
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: zitadel-external-secrets
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    pref.argocd.argoproj.io/default-view: "tree"
spec:
  project: zitadel
  destination:
    server: "https://kubernetes.default.svc"
    namespace: zitadel
  source:
    repoURL: https://github.com/small-hack/argocd-apps.git
    path: zitadel/external_secrets/
  syncPolicy:
    syncOptions:
      - Replace=true
    automated:
      prune: true
      selfHeal: true

---
# CockroachDB
# https://github.com/cockroachdb/helm-charts/tree/master/cockroachdb#configuration
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: zitadel-cockroachdb
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    pref.argocd.argoproj.io/default-view: "tree"
spec:
  project: zitadel
  destination:
    server: "https://kubernetes.default.svc"
    namespace: zitadel
  source:
    repoURL: https://charts.cockroachdb.com/
    chart: cockroachdb
    targetRevision: 11.1.5
    helm:
      # for testing add the following to values:
      # statefulset.replicas=1
      # statefulset.replicas=1
      values: |
        fullnameOverride: crdb
        serviceMonitor:
          enabled: true
        # tls:
        #   certs:
        #     certManagerIssuer:
        #       group: cert-manager.io
        #       kind: ClusterIssuer
        #       name: letsencrypt
        networkPolicy:
          enabled: true
          ingress:
            grpc:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/name: zitadel-web-app
                    app.kubernetes.io/instance: zitadel
            http:
              - namespaceSelector:
                  matchLabels:
                    project: zitadel
  syncPolicy:
    syncOptions:
      - Replace=true
    automated:
      prune: true
      selfHeal: true

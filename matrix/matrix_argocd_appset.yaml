---
# webapp is deployed 2nd because we need secrets and persistent volumes up 1st
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: matrix-web-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - matrix_hostname
              - matrix_admin_email
              - global_cluster_issuer
  template:
    metadata:
      name: matrix-web-app
    spec:
      project: matrix
      destination:
        server: https://kubernetes.default.svc
        namespace: matrix
      source:
        repoURL: 'https://small-hack.github.io/matrix-chart'
        targetRevision: 5.2.0
        chart: matrix
        helm:
          values: |
            fullnameOverride: matrix-stack
            # Runtime configuration for Synapse and settings related to the Matrix protocol
            matrix:
              # -- Domain name of the server
              serverName: "{{ .matrix_hostname }}"
              # -- Enable anonymous telemetry to matrix.org
              telemetry: false
              # -- Set to false to disable presence (online/offline indicators)
              presence: true
              # -- Set to true to block non-admins from inviting users to any rooms
              blockNonAdminInvites: false

              # -- Set to false to disable message searching
              search: true

              # Which types of rooms to enable end-to-end encryption on by default
              # off:    none
              # all:    all rooms
              # invite: private msg/room created w/ private_chat or trusted_private_chat
              #         room presets
              encryptByDefault: all

              # -- Email address of the administrator
              adminEmail: {{ .matrix_admin_email }}

              # -- Settings related to image and multimedia uploads
              uploads:
                # -- Max upload size in bytes
                maxSize: 10M

                # -- Max image size in pixels
                maxPixels: 32M

              # Settings related to federation
              federation:
                # -- Set to false to disable federation and run an isolated homeserver
                enabled: true

                # -- Allow members of other homeservers to fetch *public* rooms
                allowPublicRooms: true

                # -- Allow list of domains to federate with (comment for all domains
                #    except blacklisted)
                whitelist: []

                # -- IP addresses to blacklist federation requests to
                blacklist:
                  - '127.0.0.0/8'
                  - '10.0.0.0/8'
                  - '172.16.0.0/12'
                  - '192.168.0.0/16'
                  - '100.64.0.0/10'
                  - '169.254.0.0/16'
                  - '::1/128'
                  - 'fe80::/64'
                  - 'fc00::/7'
                ingress:
                  enabled: true
                  tls:
                    enabled: true
                  host: matrix-fed.{{ .matrix_hostname }}
                  annotations:
                    # -- required for the Nginx ingress provider. You can remove it if you
                    # use a different ingress provider
                    nginx.ingress.kubernetes.io/configuration-snippet: |
                      proxy_intercept_errors off;
                    # -- required for TLS certs issued by cert-manager
                    cert-manager.io/cluster-issuer: {{ .global_cluster_issuer }}

              # User registration settings
              registration:
                # -- Allow new users to register an account
                enabled: false

                existingSecret: "matrix-registration"
                secretKey: "registrationSharedSecret"

                # -- Allow users to join rooms as a guest
                allowGuests: false

                # Required "3PIDs" - third-party identifiers such as email or msisdn (SMS)
                # required3Pids:
                #   - email
                #   - msisdn

                # -- Rooms to automatically join all new users to
                autoJoinRooms: []
                # - "#welcome:{{ .matrix_hostname }}"

                # -- Whether to allow token based registration
                requiresToken: false

              # OpenID Connect integration. The following settings can be used to make Synapse
              # use an OpenID Connect Provider for authentication, instead of its internal
              # password database.
              # ref: https://github.com/matrix-org/synapse/blob/develop/docs/openid.md.
              oidc_config:
                # -- set to true to enable authorization against an OpenID Connect server
                enabled: true

                # -- set to false to disable use of the OIDC discovery mechanism to
                # discover endpoints.
                discover: true

                # -- auth method to use when exchanging the token. Valid values are:
                # 'client_secret_basic' (default), 'client_secret_post' and 'none'.
                client_auth_method: client_secret_post

                # -- list of scopes to request. should normally include the "openid" scope.
                # Defaults to ["openid"].
                scopes: ["openid", "profile"]

                # -- existing secret to use for the OIDC config
                existingSecret: "synapse-oidc"

                # keys in an existing secret to use for oidc config
                secretKeys:
                  # -- key in secret with the issuer
                  issuer: "issuer"
                  # -- key in secret with the client_id
                  client_id: "client_id"
                  # -- key in secret with the client_secret
                  client_secret: "client_secret"

                # set to true to skip metadata verification. Defaults to false. Use this if
                # you are connecting to a provider that is not OpenID Connect compliant.
                # Avoid this in production.
                skip_verification: false

                # An external module can be provided here as a custom solution to mapping
                # attributes returned from a OIDC provider onto a matrix user.
                user_mapping_provider:
                  # -- The custom module's class. Uncomment to use a custom module.
                  # Default is 'synapse.handlers.oidc_handler.JinjaOidcMappingProvider'.
                  #
                  # github.com/matrix-org/synapse/blob/develop/docs/sso_mapping_providers.md#openid-mapping-providers
                  # for information on implementing a custom mapping provider.
                  # example:
                  # module: mapping_provider.OidcMappingProvider
                  module: mapping_provider.OidcMappingProvider

                  # Custom configuration values for the module. This section will be passed as
                  # a Python dictionary to the user mapping provider module's `parse_config`
                  # method.
                  #
                  # The examples below are intended for the default provider: they should be
                  # changed if using a custom provider.
                  #
                  config:
                    # -- name of the claim containing a unique identifier for user. Defaults
                    # to `sub`, which OpenID Connect compliant providers should provide.
                    subject_claim: "sub"

              # Settings for the URL preview crawler
              urlPreviews:
                # -- Enable URL previews. WARN: Make sure to review default rules below to
                # ensure that users cannot crawl sensitive internal endpoints on yr cluster
                enabled: false

                # Blacklists and whitelists for the URL preview crawler
                rules:
                  # -- Max size of a crawlable page. Keep this low to prevent a DOS vector
                  maxSize: 10M

                  # Whitelist and blacklist for crawlable IP addresses
                  ip:
                    whitelist: []
                    blacklist:
                      - '127.0.0.0/8'
                      - '10.0.0.0/8'
                      - '172.16.0.0/12'
                      - '192.168.0.0/16'
                      - '100.64.0.0/10'
                      - '169.254.0.0/16'
                      - '::1/128'
                      - 'fe80::/64'
                      - 'fc00::/7'

                  # -- Whitelist and blacklist based on URL pattern matching
                  url: {}
                  # whitelist:
                  # blacklist:
                  #  # blacklist any URL with a username in its URI
                  #  - username: '*'
                  #
                  #  # blacklist all *.google.com URLs
                  #  - netloc: 'google.com'
                  #  - netloc: '*.google.com'
                  #
                  #  # blacklist all plain HTTP URLs
                  #  - scheme: 'http'
                  #
                  #  # blacklist http(s)://www.acme.com/foo
                  #  - netloc: 'www.acme.com'
                  #    path: '/foo'
                  #
                  #  # blacklist any URL with a literal IPv4 address
                  #  - netloc: '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$'

              # -- How long to keep redacted events in unredacted form in the database
              retentionPeriod: 7d

              security:
                # a secret which is used to sign access tokens. If none is specified,
                # the registration_shared_secret is used, if one is given; otherwise,
                # a secret key is derived from the signing key.
                #
                # macaroonSecretKey: <PRIVATE STRING>

                # This disables the warning that is emitted when the
                # trustedKeyServers include 'matrix.org'. See below.
                # Set to false to re-enable the warning.
                #
                surpressKeyServerWarning: true

                # The trusted servers to download signing keys from.
                #
                # When we need to fetch a signing key, each server is tried in parallel.
                #
                # Normally, the connection to the key server is validated via TLS certs.
                # Additional security can be provided by configuring a `verify key`, which
                # will make synapse check that the response is signed by that key.
                #
                # This setting supercedes an older setting named `perspectives`. Old format
                # is still supported for backwards-compatibility, but it is deprecated.
                #
                # 'trustedKeyServers' defaults to matrix.org, but using it will generate a
                # warning on start-up. To suppress this warning, set
                # 'surpressKeyServerWarning' to true.
                #
                # Options for each entry in the list include:
                #
                #  serverName: the name of the server. required.
                #
                #  verifyKeys: an optional map from key id to base64-encoded public key.
                #     If specified, we will check that the response is signed by at least
                #     one of the given keys.
                #
                #  acceptKeysInsecurely: a boolean. Normally, if `verify_keys` is unset,
                #    and federation_verify_certificates is not `true`, synapse will refuse
                #    to start, because this would allow anyone who can spoof DNS responses
                #    to masquerade as the trusted key server. If you know what you are doing
                #    and are sure that your network environment provides a secure connection
                #    to the key server, you can set this to `true` to override this
                #    behaviour.
                #
                # An example configuration might look like:
                #
                # trustedKeyServers:
                #   - serverName: my_trusted_server.{{ .matrix_hostname }}
                #     verifyKeys:
                #       - id: "ed25519:auto"
                #         key: "abcdefghijklmnopqrstuvwxyzabcdefghijklmopqr"
                #     acceptKeysInsecurely: false
                #   - serverName: my_other_trusted_server.{{ .matrix_hostname }}

              # -- Set to true to globally block access to the homeserver
              disabled: false
              # -- Human readable reason for why the homeserver is blocked
              disabledMessage: ""

              logging:
                # -- Root log level is the default log level for log outputs that don't
                # have more specific settings.
                rootLogLevel: WARNING
                # -- beware: increasing this to DEBUG will make synapse log sensitive
                # information such as access tokens.
                sqlLogLevel: WARNING
                # -- The log level for the synapse server
                synapseLogLevel: WARNING

            # Persistent volumes configuration
            volumes:
              # Uploaded attachments/multimedia
              media:
                # -- Capacity of the media PVC - ignored if using exsitingClaim
                capacity: 10Gi
                # -- Storage class of the media PVC - ignored if using exsitingClaim
                storageClass: ""
                # -- name of an existing PVC to use for uploaded attachments and multimedia
                existingClaim: ""
              signingKey:
                # -- Capacity of the signing key PVC. Note: 1Mi is more than enough, but
                # some cloud providers set a min PVC size of 1Mi or 1Gi, adjust as necessary
                capacity: 1Mi
                # -- Storage class (optional)
                storageClass: ""
                # -- name of an existing persistent volume claim to use for signing key
                existingClaim: ""
              synapseConfig:
                # -- Capacity of the signing key PVC. Note: 1Mi is more than enough, but
                # some cloud providers set a min PVC size of 1Mi or 1Gi, adjust as necessary
                capacity: 1Mi
                # -- Storage class (optional)
                storageClass: ""
                # -- name of an existing persistent volume claim for synapse config file
                existingClaim: ""


            # PostgreSQL Database configuration, for more options:
            # https://github.com/bitnami/charts/tree/main/bitnami/postgresql
            postgresql:
              # -- Whether to deploy the stable/postgresql chart with this chart.
              # If disabled, make sure PostgreSQL is available at the hostname below and
              # credentials are configured under postgresql.global.postgresql.auth
              enabled: true
              volumePermissions:
                # -- Enable init container that changes the owner and group of the PVC
                enabled: true
              global:
                postgresql:
                  # global.postgresql.auth overrides postgresql.auth
                  auth:
                    # database credentials to use if you don't use an existingSecret
                    # -- username of matrix postgres user
                    username: matrix
                    # -- which port to use to connect to your database server
                    port: 5432

                    # -- Name of existing secret to use for PostgreSQL credentials
                    existingSecret: "matrix-pgsql-credentials"
                    # secretKeys to grab from existingSecret
                    # if postgresql.existingSecret is provided, the following are ignored
                    # postgresql.password/username/hostname/database/port
                    secretKeys:
                      # -- key in existingSecret with hostname of the database
                      databaseHostname: hostname
                      # -- key in existingSecret with username for matrix to connect to db
                      databaseUsername: username
                      # -- key in existingSecret with password for matrix to connect to db
                      userPasswordKey: password
                      # -- key in existingSecret with the admin postgresql password
                      adminPasswordKey: password

              # primary database node config
              primary:
                podAnnotations:
                  k8up.io/backupcommand: "sh -c 'PGDATABASE=\"$POSTGRES_DB\" PGUSER=\"$POSTGRES_USER\" PGPASSWORD=\"$POSTGRES_PASSWORD\" pg_dump --clean'"
                  k8up.io/file-extension: .sql
                pgHbaConfiguration: |-
                  local all all trust
                  host all all 127.0.0.1/32 md5
                  host all matrix 10.0.0.0/8 md5
                # -- persistent volume claim configuration for postgresql to persist data
                persistence:
                  # -- Enable PostgreSQL Primary data persistence using PVC
                  enabled: true
                  # -- size of postgresql volume claim
                  size: 8Gi
                  existingClaim: "matrix-postgresql"

                # templates/postgresql/initdb-configmap.yaml
                # ref: https://github.com/matrix-org/synapse/blob/develop/docs/postgres.md
                initdb:
                  scriptsConfigMap: "matrix-stack-postgresql-initdb"

                podSecurityContext:
                  enabled: true
                  runAsUser: 1000
                  fsGroup: 1000

            # Synapse Kubernetes resource settings
            synapse:
              image:
                # -- image registry and repository to use for synapse
                repository: "matrixdotorg/synapse"
                # -- pullPolicy for synapse image, Use Always if using image.tag: latest
                pullPolicy: IfNotPresent

              service:
                # -- service type for synpase
                type: ClusterIP
                # -- service port for synapse
                port: 80
                federation:
                  type: ClusterIP
                  port: 80

              ingress:
                enabled: true
                host: matrix.{{ .matrix_hostname }}
                tls:
                  enabled: true
                annotations:
                  # -- This annotation is required for the Nginx ingress provider. You can
                  # remove it if you use a different ingress provider
                  nginx.ingress.kubernetes.io/configuration-snippet: |
                    proxy_intercept_errors off;
                  # -- required for TLS certs issued by cert-manager
                  cert-manager.io/cluster-issuer: {{ .global_cluster_issuer }}

              replicaCount: 1
              resources: {}
              # Configure timings for readiness, startup, and liveness probes here
              probes:
                readiness:
                  # -- readiness probe seconds before timing out
                  timeoutSeconds: 5
                  # -- readiness probe seconds trying again
                  periodSeconds: 10
                startup:
                  # -- startup probe seconds before timing out
                  timeoutSeconds: 5
                  # -- startup probe seconds trying again
                  periodSeconds: 5
                  # -- startup probe times to try and fail before giving up
                  failureThreshold: 6
                liveness:
                  # -- liveness probe seconds before timing out
                  timeoutSeconds: 5
                  # -- liveness probe seconds trying again
                  periodSeconds: 10

              # Does not work by default in all cloud providers, disable by default
              securityContext:
                # -- user to run the synapse container as
                runAsUser: 1000
                # -- group to run the synapse container as
                runAsGroup: 1000
                fsGroup: 1000
                runAsNonRoot: true

                # -- Enable if your k8s environment allows containers to chuser/setuid
                # https://github.com/matrix-org/synapse/blob/96cf81e312407f0caba1b45ba9899906b1dcc098/docker/start.py#L196
                env: false

              # -- Labels to be appended to all Synapse resources
              labels:
                component: synapse

              # Prometheus metrics for Synapse
              # https://github.com/matrix-org/synapse/blob/develop/docs/metrics-howto.md
              metrics:
                # -- Whether Synapse should capture metrics on an additional endpoint
                enabled: true
                # -- Port to listen on for metrics scraping
                port: 9092
                annotations: true

              extraVolumes: []


              extraVolumeMounts: []

            # Element client configuration. see: https://element.io/
            element:
              # -- Set to false to disable a deployment of Element. Users will still be able
              # to connect via any other instances of Element e.g. https://app.element.io,
              # Element Desktop, or any other Matrix clients
              enabled: true

              ingress:
                # -- enable ingress for element
                enabled: true
                tls:
                  enabled: true
                # -- the hostname to use for element
                host: element.{{ .matrix_hostname }}
                annotations:
                  # This annotation is required for the Nginx ingress provider. You can
                  # remove it if you use a different ingress provider
                  nginx.ingress.kubernetes.io/configuration-snippet: |
                    proxy_intercept_errors off;
                  # -- required for TLS certs issued by cert-manager
                  cert-manager.io/cluster-issuer: {{ .global_cluster_issuer }}

              # Organization/enterprise branding
              branding:
                # -- brand shown in email notifications
                brand: "{{ .matrix_hostname }}"
                # -- Background of login splash screen
                welcomeBackgroundUrl: "https://i.imgur.com/VpFquY4.png"
                # -- Logo shown at top of login screen
                authHeaderLogoUrl: "https://raw.githubusercontent.com/jessebot/dot_files/main/.local/share/fastfetch/logos/dogontheinternet.png"
                # -- Array of links to show at the bottom of the login screen
                authFooterLinks: []
                #  - text:
                #    url:

              # Element integrations configuration
              integrations:
                # -- enables the Integrations menu, including:
                #    widgets, bots, and other plugins to Element
                enabled: true
                # -- UI to load when a user selects the Integrations button at the top-right
                #    of a room
                ui: "https://scalar.vector.im/"
                # -- API for the integration server
                api: "https://scalar.vector.im/api"
                # -- Array of API paths providing widgets
                widgets:
                  - "https://scalar.vector.im/_matrix/integrations/v1"
                  - "https://scalar.vector.im/api"
                  - "https://scalar-staging.vector.im/_matrix/integrations/v1"
                  - "https://scalar-staging.vector.im/api"
                  - "https://scalar-staging.element.im/scalar/api"

              # -- Experimental features in Element, see:
              # https://github.com/vector-im/element-web/blob/develop/docs/labs.md
              labs:
                - feature_report_to_moderators
                - feature_pinning
                - feature_state_counters
                - feature_mjolnir
                - feature_dm_verification
                - feature_bridge_state
                - feature_custom_themes
                - feature_jump_to_date
                - feature_video_rooms
                - feature_element_call_video_rooms
                - feature_group_calls

              # -- Servers to show in the Explore menu (the current server is always shown)
              roomDirectoryServers:
                - matrix.org

              # -- Set to the user ID (@username:domain.tld) of a bot to invite all new
              # users to a DM with the bot upon registration
              welcomeUserId: ""

              # -- Prefix before permalinks generated when users share links to rooms,
              # users, or messages. If running an unfederated Synapse, set the below to the
              # URL of your Element instance.
              permalinkPrefix: "https://matrix.to"

              # Element Kubernetes resource settings
              image:
                # -- registry and repository to use for element docker image
                repository: "vectorim/element-web"
                # -- tag to use for element docker image
                # -- pullPolicy to use for element image, set to Always if using latest tag
                pullPolicy: IfNotPresent
              service:
                type: ClusterIP
                port: 80
              replicaCount: 1
              resources: {}
              probes:
                readiness: {}
                startup: {}
                liveness: {}

              # -- Element specific labels
              labels:
                component: element

            # Settings for Coturn TURN relay, used for routing voice calls
            coturn:
              # -- Set to false to disable the included deployment of Coturn
              enabled: false

              certificate:
                # -- set to true to generate a TLS certificate for encrypted comms
                enabled: true
                # -- hostname for TLS cert
                host: turn.{{ .matrix_hostname }}
                # -- cert-manager cert Issuer or ClusterIssuer to use
                issuerName: "{{ .global_cluster_issuer }}"

              # -- URIs of the Coturn servers. If deploying Coturn with this chart, include
              # the public IPs of each node in your cluster (or a DNS round-robin hostname)
              # You can also include an external Coturn instance if you'd prefer
              uris: []
              #  - "turn:turn.{{ .matrix_hostname }}?transport=udp"

              # -- Whether to allow guests to use the TURN server
              allowGuests: true

              # -- shared secert for comms b/w Synapse/Coturn. autogenerated if not provided
              sharedSecret: ""
              # -- Optional: name of an existingSecret with key for sharedSecret
              existingSecret: ""
              # -- key in existing secret with sharedSecret value. Required if
              # coturn.enabled=true and existingSecret not ""
              secretKey: "coturnSharedSecret"

            # Settings for email notifications
            mail:
              # -- disabled all email notifications by default. NOTE: If enabled, either
              # enable the Exim relay or configure an external mail server below
              enabled: false

              # External mail server
              external:
                # -- External mail server hostname
                host: ""
                # -- External mail server port
                port: 25  # SSL: 465, STARTTLS: 587
                # -- External mail server username
                username: ""
                # -- External mail server password
                password: ""
                requireTransportSecurity: true

            bridges:
              irc:
                # -- Set to true to enable the IRC bridge
                enabled: false
              whatsapp:
                # -- Set to true to enable the WhatsApp bridge
                enabled: false
              discord:
                # -- Set to true to enable the Discord bridge
                enabled: false

            networkPolicies:
              # -- whether to enable kubernetes network policies or not
              enabled: true

---
# First sync wave done in parallel with creating secrets. Must be BEFORE
# mastodon so that mastodon persists it's data between upgrades. Sync policy
# is set to ApplyOutOfSyncOnly=true to create the volume initially only.
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mastodon-persistence
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: mastodon
  source:
    repoURL: https://github.com/small-hack/argocd.git
    path: mastodon/manifests/persistence/
  syncPolicy:
    syncOptions:
      - ApplyOutOfSyncOnly=true
    automated:
      selfHeal: true

---
# First sync wave because we need secrets for mastodon, so it has to be
# before mastodon so it has secrets for all its credentials.
# In a private repo right now while we figure out a custom argocd plugin
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mastodon-external-secrets
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: mastodon
  source:
    repoURL: https://github.com/small-hack/vleermuis-external-secrets.git
    path: external_secrets/mastodon/
  syncPolicy:
    syncOptions:
      - Replace=true
    automated:
      prune: true
      selfHeal: true


---
# has to be after secrets, but before web-app
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mastodon-postgres
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: mastodon
  source:
    chart: postgresql
    repoURL: 'https://charts.bitnami.com/bitnami'
    targetRevision: 12.2.2
    helm:
      skipCrds: true
      values: |
        global:
          postgresql:
            auth:
              username: "mastodon"
              database: "mastodon_production"
              existingSecret: "mastodon-postgres-credentials"
              secretKeys:
                adminPasswordKey: "POSTGRES_ADMIN_PASSWORD"
                userPasswordKey: "POSTGRES_USER_PASSWORD"
                replicationPasswordKey: "POSTGRES_REPLICATION_PASSWORD"
        image:
          registry: docker.io
          repository: bitnami/postgresql
          tag: 15.2.0-debian-11-r5
          digest: ""
        primary:
          resources:
            limits:
              memory: 1024Mi
              cpu: 1000m
            requests:
              memory: 256Mi
              cpu: 250m
          persistence:
            mountPath: /bitnami/postgresql
            size: 2Gi
          service:
            type: ClusterIP
        metrics:
          enabled: true
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - Replace=true
    automated:
      selfHeal: true
      prune: true

---
# third sync wave because it has to be up after postgres
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mastodon-web-app
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  project: default
  sources:
    # using:       https://github.com/small-hack/argocd.git
    # forked from: https://github.com/mastodon/chart/tree/main
    - repoURL: 'https://jessebot.github.io/mastodon-helm-chart'
      chart: mastodon
      targetRevision: 4.0.1
      helm:
        valueFiles:
        - $values/mastodon/values.yaml
    # our values.yaml file locally
    - repoURL: 'https://github.com/small-hack/argocd.git'
      targetRevision: main
      ref: values
  destination:
    server: "https://kubernetes.default.svc"
    namespace: mastodon
  syncPolicy:
    syncOptions:
      - Replace=true
    automated:
      prune: true
      selfHeal: true

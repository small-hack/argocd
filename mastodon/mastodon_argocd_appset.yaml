---
# third sync wave because it has to be up after postgres
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: mastodon-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            env_vars:
              - mastodon_hostname
              - global_cluster_issuer
  template:
    metadata:
      name: mastodon-web-app
    spec:
      project: mastodon
      destination:
        server: https://kubernetes.default.svc
        namespace: mastodon
      source:
        # forked from: https://github.com/mastodon/chart/tree/main
        repoURL: 'https://jessebot.github.io/mastodon-helm-chart'
        targetRevision: 4.4.1
        chart: mastodon
        helm:
          values: |
            image:
              repository: ghcr.io/mastodon/mastodon
              # https://github.com/mastodon/mastodon/pkgs/container/mastodon
              pullPolicy: IfNotPresent

            mastodon:
              createAdmin:
                enabled: true
                existingSecret: mastodon-admin-credentials
                secretKeys:
                  usernameKey: username
                  passwordKey: password
                  emailKey: email
              cron:
                # -- run `tootctl media remove` every week
                removeMedia:
                  # @ignored
                  enabled: true
                  # @ignored
                  schedule: "0 0 * * 0"
              # -- available locales: https://github.com/mastodon/mastodon/blob/main/config/application.rb#L71
              locale: en
              local_domain: {{ .mastodon_hostname }}
              # -- Use of WEB_DOMAIN requires careful consideration: https://docs.joinmastodon.org/admin/config/#federation
              # You must redirect the path LOCAL_DOMAIN/.well-known/ to WEB_DOMAIN/.well-known/ as described
              # Example: mastodon.example.com
              web_domain: null
              # -- If set to true, the frontpage of your Mastodon server will always redirect to the first profile in the database and registrations will be disabled.
              singleUserMode: false
              # -- Enables "Secure Mode" for more details see: https://docs.joinmastodon.org/admin/config/#authorized_fetch
              authorizedFetch: false
              # -- Enables "Limited Federation Mode" for more detauls see: https://docs.joinmastodon.org/admin/config/#limited_federation_mode
              limitedFederationMode: false
              persistence:
                assets:
                  accessMode: ReadWriteMany
                  existingClaim: mastodon-assets
                system:
                  accessMode: ReadWriteMany
                  existingClaim: mastodon-system
              s3:
                enabled: true
                # -- you can also specify the name of an existing Secret
                # with keys AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
                existingSecret: "mastodon-s3-credentials"
                # I don't know what this is
                permission: ""
                # -- If you have a caching proxy, enter its base URL here.
                # alias_host: ""
              secrets:
                existingSecret: "mastodon-server-credentials"
                secretKeys:
                  s3AccessKeyID: ACCESS_KEY_ID
                  s3AccessKey: SECRET_ACCESS_KEY
                  s3Bucket: BUCKET
                  s3Endpoint: ENDPOINT
                  # whats the difference between endpoint and hostname?
                  s3Hostname: ""
                  # might not be needed?
                  s3Region: ""
                # these must be set manually; autogenerated keys are rotated on each upgrade
                # secret_key_base: ""
                # otp_secret: ""
                # vapid:
                #   private_key: ""
                #   public_key: ""
                # -- you can also specify the name of an existing Secret
                # with keys SECRET_KEY_BASE and OTP_SECRET and
                # VAPID_PRIVATE_KEY and VAPID_PUBLIC_KEY
              sidekiq:
                workers:
                - name: all-queues
                  # -- Number of threads / parallel sidekiq jobs that are executed per Pod
                  concurrency: 25
                  # -- Sidekiq queues for Mastodon that are handled by this worker. See https://docs.joinmastodon.org/admin/scaling/#concurrency
                  # See https://github.com/mperham/sidekiq/wiki/Advanced-Options#queues for how to weight queues as argument
                  queues:
                    - default,8
                    - push,6
                    - ingress,4
                    - mailers,2
                    - pull
                    - scheduler # Make sure the scheduler queue only exists once and with a worker that has 1 replica.
                #- name: push-pull
                #  concurrency: 50
                #  resources: {}
                #  replicas: 2
                #  queues:
                #    - push
                #    - pull
                #- name: mailers
                #  concurrency: 25
                #  replicas: 2
                #  queues:
                #    - mailers
                #- name: default
                #  concurrency: 25
                #  replicas: 2
                #  queues:
                #    - default
              smtp:
                auth_method: login
                ca_file: /etc/ssl/certs/ca-certificates.crt
                delivery_method: smtp
                domain: {{ .mastodon_hostname }}
                enable_starttls: 'auto'
                from_address: "toots@{{ .mastodon_hostname }}"
                return_path:
                openssl_verify_mode: peer
                port: 587
                reply_to: "no-reply@{{ .mastodon_hostname }}"
                tls: true
                # keys must be named `server`, `login`, `password`
                existingSecret: mastodon-smtp-credentials
              streaming:
                port: 4000
                # -- this should be set manually since os.cpus() returns the number of CPUs on
                # the node running the pod, which is unrelated to the resources allocated to
                # the pod by k8s
                workers: 1
                # -- The base url for streaming can be set if the streaming API is deployed to
                # a different domain/subdomain.
                base_url: null
                # -- Number of Streaming Pods running
                replicas: 1
              web:
                port: 3000
                # -- Number of Web Pods running
                replicas: 1
                minThreads: "5"
                maxThreads: "5"
                workers: "2"
                persistentTimeout: "20"

              metrics:
                statsd:
                  # -- Enable statsd publishing via STATSD_ADDR environment variable
                  address: ""

              # Sets the PREPARED_STATEMENTS environment variable: https://docs.joinmastodon.org/admin/config/#prepared_statements
              preparedStatements: true

            ingress:
              enabled: true
              annotations:
                kubernetes.io/tls-acme: "true"
                cert-manager.io/cluster-issuer: "{{ .global_cluster_issuer }}"
                # ensure that NGINX's upload size matches Mastodon's
                nginx.ingress.kubernetes.io/proxy-body-size: 40m
              # -- you can specify the ingressClassName if it differs from the default
              ingressClassName: nginx
              hosts:
                - host: {{ .mastodon_hostname }}
                  paths:
                    - path: '/'
              tls:
                - secretName: mastodon-tls
                  hosts:
                    - {{ .mastodon_hostname }}

            # -- https://github.com/bitnami/charts/tree/main/bitnami/elasticsearch#parameters
            elasticsearch:
              # `false` will disable full-text search
              # if you enable ES after the initial install, you will need to manually run
              # RAILS_ENV=production bundle exec rake chewy:sync
              # (https://docs.joinmastodon.org/admin/optional/elasticsearch/)
              # @ignored
              enabled: true
              # @ignored
              image:
                tag: 7
              master:
                replicaCount: 1
                autoscaling:
                  minReplicas: 1
              data:
                replicaCount: 1
              coordinating:
                replicaCount: 1
              ingest:
                replicaCount: 1

            # https://github.com/bitnami/charts/tree/main/bitnami/postgresql#parameters
            postgresql:
              # -- disable if you want to use an existing db; in which case the values below
              # must match those of that external postgres instance
              enabled: false
              postgresqlHostname: mastodon-postgres-postgresql.mastodon.svc.cluster.local
              postgresqlPort: 5432
              auth:
                database: mastodon
                username: mastodon
                # you can also specify the name of an existing Secret
                # with a key of password set to the password you want
                existingSecret: "mastodon-pgsql-credentials"
                secretKeys:
                  adminPasswordKey: postgresPassword
                  userPasswordKey: password

            # https://github.com/bitnami/charts/tree/main/bitnami/redis#parameters
            redis:
              # disable if you want to use an existing redis instance; in which case the
              # values below must match those of that external redis instance
              enabled: false
              hostname: "mastodon-redis-master"
              port: 6379
              auth:
                # you can also specify the name of an existing Secret
                # with a key of redis-password set to the password you want
                existingSecret: "mastodon-redis-credentials"

            # @ignored
            service:
              type: ClusterIP
              port: 80

            externalAuth:
              oidc:
                # -- OpenID Connect support is proposed in PR #16221 and awaiting merge.
                enabled: false
                # display_name: "example-label"
                # issuer: https://login.example.space/auth/realms/example-space
                # discovery: true
                # scope: "openid,profile"
                # uid_field: uid
                # client_id: mastodon
                # client_secret: SECRETKEY
                # redirect_uri: https://example.com/auth/auth/openid_connect/callback
                # assume_email_is_verified: true
                # client_auth_method:
                # response_type:
                # response_mode:
                # display:
                # prompt:
                # send_nonce:
                # send_scope_to_token_endpoint:
                # idp_logout_redirect_uri:
                # http_scheme:
                # host:
                # port:
                # jwks_uri:
                # auth_endpoint:
                # token_endpoint:
                # user_info_endpoint:
                # end_session_endpoint:
              oauth_global:
                # -- Automatically redirect to OIDC, CAS or SAML, and don't use local account authentication when clicking on Sign-In
                omniauth_only: false

            # -- https://github.com/mastodon/mastodon/blob/main/Dockerfile#L75
            # if you manually change the UID/GID environment variables, ensure these values
            # match:
            podSecurityContext:
              runAsUser: 991
              runAsGroup: 991
              fsGroup: 991

            # @ignored
            securityContext: {}

            serviceAccount:
              # -- Specifies whether a service account should be created
              create: true
              # -- Annotations to add to the service account
              annotations: {}
              # -- The name of the service account to use.
              # If not set and create is true, a name is generated using the fullname template
              name: ""

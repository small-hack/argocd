---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: home-assistant-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - home_assistant_hostname
              - global_cluster_issuer
  template:
    metadata:
      name: home-assistant-app
      annotations:
        argocd.argoproj.io/sync-wave: "2"
    spec:
      project: home-assistant
      destination:
        server: "https://kubernetes.default.svc"
        namespace: home-assistant
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          selfHeal: false
      source:
        # https://github.com/small-hack/home-assistant-chart
        repoURL: https://small-hack.github.io/home-assistant-chart
        chart: home-assistant
        targetRevision: 0.3.1
        helm:
          releaseName: home-assistant
          valuesObject:
            fullnameOverride: home-assistant

            ingress:
              # Enable ingress for home assistant
              enabled: true
              className: "nginx"
              annotations:
                kubernetes.io/tls-acme: "true"
                cert-manager.io/cluster-issuer: '{{ .global_cluster_issuer }}'
                nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
                nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
                nginx.ingress.kubernetes.io/server-snippets: |
                  location / {
                    proxy_pass http://home-assistant.home-assistant.svc.cluster.local:80
                    proxysetheader Host $host;
                    proxy_redirect http:// https://;
                    proxysetheader Upgrade $httpupgrade;
                    proxyhttpversion 1.1;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
                  }
                  location /api/websocket {
                    proxy_pass http://home-assistant.home-assistant.svc.cluster.local:80/api/websocket;
                    proxy_set_header Host $host;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
                  }
              hosts:
                - host: '{{ .home_assistant_hostname }}'
                  paths:
                  - path: /
                    pathType: Prefix
                    backend:
                      service:
                        name: home-assistant
                        port:
                          number: 80
                  - path: /api/websocket
                    pathType: Prefix
                    backend:
                      service:
                        name: home-assistant
                        port:
                          number: 80
              tls:
                - hosts:
                   - '{{ .home_assistant_hostname }}'
                  secretName: home-assistant-tls
                  
            persistence:
              enabled: true
              # existingClaim: home-assistant
              storageClass: local-path
            
            homeAssistant:
              # existingConfigMap: home-assistant
              configuration:
                http:
                  use_x_forwarded_for: true
                  trusted_proxies:
                    - 10.0.0.0/8

            livenessProbe:
              enabled: false
            readinessProbe:
              enabled: false

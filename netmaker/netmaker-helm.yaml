---
# First sync wave done in parallel with creating secrets. Must be BEFORE
# netmaker so that netmaker persists it's data between upgrades. Sync policy
# is set to ApplyOutOfSyncOnly=true to create the volume initially only.
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: netmaker-persistence
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: netmaker
  source:
    repoURL: https://github.com/small-hack/argocd.git
    path: netmaker/manifests/persistence/
  syncPolicy:
    syncOptions:
      - ApplyOutOfSyncOnly=true
    automated:
      selfHeal: true

---
# First sync wave because we need secrets for netmaker, so it has to be
# before netmaker so it has secrets for all its credentials.
# In a private repo right now while we figure out a custom argocd plugin
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: netmaker-external-secrets
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: netmaker
  source:
    repoURL: https://github.com/small-hack/vleermuis-external-secrets.git
    path: external_secrets/netmaker/
  syncPolicy:
    syncOptions:
      - Replace=true
    automated:
      prune: true
      selfHeal: true

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: postgres
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: postgres
  source:
    chart: postgresql
    repoURL: 'https://charts.bitnami.com/bitnami'
    targetRevision: 12.2.2
    helm:
      skipCrds: true
      values: |
        global:
          postgresql:
            auth:
              username: netmaker
              database: netmaker
              existingSecret: netmaker-pgsql-credentials
              secretKeys:
                userPasswordKey: netmakerPassword
                adminPasswordKey: postgresPassword
        volumePermissions:
          enabled: true
        primary:
          podAnnotations:
            k8up.io/backupcommand: "sh -c 'PGDATABASE=\"$POSTGRES_DB\" PGUSER=\"$POSTGRES_USER\" PGPASSWORD=\"$POSTGRES_PASSWORD\" pg_dump --clean'"
            k8up.io/file-extension: .sql
          pgHbaConfiguration: |-
            local all all trust
            host all all 127.0.0.1/32 md5
            host all netmaker 10.0.0.0/8 md5
          # type database user cidr-address method
          # host all postgres 10.0.0.0/8 md5
          # alls traffic from everywhere
          # host all all 0.0.0.0/0 md5
          initdb:
            scripts:
              my_init_script.sql: |
                ALTER DATABASE netmaker OWNER TO netmaker;
                GRANT ALL PRIVILEGES ON DATABASE netmaker TO netmaker;
                GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO netmaker;
          persistence:
            enabled: true
            # Use an existing Persistent Volume Claim (must be created ahead of time)
            existingClaim: "netmaker-postgresql"
            # storageClass: ""
          enabled: true
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - Replace=true
    automated:
      selfHeal: true
      prune: true

---
# webapp is deployed 2nd because we need secrets
# chart: https://freifunkMUC.github.io/netmaker-chart/
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: netmaker-web-app
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: netmaker
  sources:
    # official netmaker helm repo: https://github.com/gravitl/netmaker-helm
    # we're using a fork with fixes we need for security:
    # https://aldiserg.github.io/netmaker-helm/
    - repoURL: 'https://jessebot.github.io/netmaker-helm/'
      chart: netmaker
      targetRevision: 0.3.5
      helm:
        valueFiles:
        - $values/netmaker/values/values.yaml
    # our values.yaml file locally
    - repoURL: 'https://github.com/small-hack/argocd.git'
      targetRevision: main
      ref: values
  syncPolicy:
    syncOptions:
      - ApplyOutOfSyncOnly=true
    automated:
      prune: true
      selfHeal: true

valkey cluster example that does not currently work as sidekiq does not support redis-cluster:

---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: valkey-cluster-appset
  namespace: argocd
spec:
  # enable go templating
  goTemplate: true
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - global_time_zone
  template:
    metadata:
      name: valkey-cluster-app
      annotations:
        argocd.argoproj.io/sync-wave: "1"
    spec:
      project: kubevirt
      destination:
        server: https://kubernetes.default.svc
        namespace: kubevirt

      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true

      source:
        repoURL: 'registry-1.docker.io'
        chart: bitnamicharts/valkey-cluster
        targetRevision: 1.0.2
        helm:
          valuesObject:

            global:
              storageClass: "local-path"

            fullnameOverride: "valkey"

            usePassword: true
            existingSecret: "kubevirt-valkey-credentials"
            existingSecretPasswordKey: "valkey-password"

            tls:
              enabled: false
              authClients: true
              autoGenerated: false

            persistence:
              enabled: true
              path: /bitnami/valkey/data
              storageClass: local-path
              annotations:
                k8up.io/backup: 'true'
              accessModes:
                - ReadWriteOnce
              size: 8G

            persistentVolumeClaimRetentionPolicy:
              enabled: true
              whenScaled: Retain
              whenDeleted: Retain

            valkey:
              command: []
              args: []
              updateStrategy:
                type: RollingUpdate
                rollingUpdate:
                  partition: 0

              podManagementPolicy: Parallel
              automountServiceAccountToken: false
              hostNetwork: false
              useAOFPersistence: "yes"
              containerPorts:
                valkey: 6379
                bus: 16379

              resourcesPreset: "small"
              resources: {}

            cluster:
              init: true
              nodes: 6
              replicas: 1
              externalAccess:
                enabled: false
                hostMode: false
                service:
                  disableLoadBalancerIP: false
                  type: LoadBalancer
                  port: 6379
                  loadBalancerIP: []
                  loadBalancerSourceRanges: []

            # metrics on valkey cluster
            metrics:
              # we use a grafana exporter that logs into valkey directly
              enabled: false


